scope: cluster_scope
namespace: /cluster_namespace/
name: postgres{{ id }}
restapi:
  listen: {{ ansible_default_ipv4.address }}:8008
  connect_address: {{ ansible_default_ipv4.address }}:8008
etcd3:
  use_ssl: false
  hosts: '{{ hostvars[groups['patroni_etcd'][0]]['ansible_default_ipv4']['address'] }}:2379,{{ hostvars[groups['patroni_etcd'][1]]['ansible_default_ipv4']['address'] }}:2379,{{ hostvars[groups['patroni_etcd'][2]]['ansible_default_ipv4']['address'] }}:2379'
  #host: '127.0.0.1:2379'
bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
#        wal_level: replica
        wal_level: replica
        hot_standby: "on"
        wal_keep_segments: 20
        max_wal_senders: 8
        max_replication_slots: 8
#        checkpoint_timeoust: 30
        checkpoint_timeoust: 30
  initdb:
    - encoding: UTF8
    - data-checksums
#    - locale: en_EN.UTF-8
  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
{% for host in groups['patroni_database'] %}
  - host replication replication {{ hostvars[host]['ansible_default_ipv4']['address'] }}/32 md5
{% endfor %}
  - host all all 0.0.0.0/0 trust
  - host repmgr all 0.0.0.0/0 trust
  - host replication all 0.0.0.0/0 trust
  users:
    admin:
      password: admin
      options:
        - createrole
        - createdb
postgresql:
  listen: {{ ansible_default_ipv4.address }}:5432
  #listen: 127.0.0.1:5432
  connect_address: {{ ansible_default_ipv4.address }}:5432
  #connect_address: 127.0.0.1:5432
  bin_dir: /usr/pgsql-11/bin/
  data_dir: /var/lib/pgsql/11/data  
  authentication:
    replication:
      username: replication
      password: testpass
    superuser:
      username: postgres
      password: testpass
  create_replica_methods:
    basebackup:
      checkpoint: fast
  parameters:
    unix_socket_directories: '/var/run/postgresql'
    archive_mode: on
    archive_command: 'rsync -e "ssh -o StrictHostKeyChecking=no" -a %p barman@{{ hostvars[groups['barman'][0]]['inventory_hostname'] }}:/var/lib/barman/{{ inventory_hostname_short }}/incoming/%f'
tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false
